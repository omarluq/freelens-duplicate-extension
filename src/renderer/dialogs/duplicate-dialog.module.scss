@use "../vars.scss";

.duplicateDialog {
  :global(.Dialog) {
    .box {
      max-width: 50vw;
      min-width: 45 * vars.$unit; // 360px
      background-color: var(--contentColor);
      color: var(--textColorPrimary);
      border-radius: calc(vars.$unit / 2); // 4px
      line-height: 1.5;
      overflow: hidden;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
    }
  }
}

.dialogContent {
  padding: vars.$padding * 3; // 24px
  background-color: var(--contentColor);
  display: flex;
  flex-direction: column;
  gap: vars.$margin * 2; // 16px
  word-break: break-word;

  h2 {
    margin: 0 0 vars.$margin * 2.5 0; // 0 0 20px 0
    font-size: 18px;
    font-weight: 600;
    color: var(--textColorPrimary);
  }
}

.resourceInfo {
  background-color: var(--secondaryBackground);
  border-radius: calc(vars.$unit / 2); // 4px
  padding: vars.$padding * 2; // 16px
  border-left: 3px solid var(--colorInfo);
  margin-bottom: vars.$margin; // 8px

  p {
    margin: 0 0 vars.$margin 0; // 0 0 8px 0
    font-size: 14px;
    line-height: 1.4;
    color: var(--textColorPrimary);

    &:last-child {
      margin-bottom: 0;
    }

    strong {
      font-weight: 600;
      color: var(--textColorPrimary);
    }
  }
}

.formGroup {
  display: flex;
  flex-direction: column;
  gap: vars.$margin; // 8px
  margin-bottom: vars.$padding * 2; // 16px

  label {
    font-weight: 500;
    font-size: 14px;
    color: var(--textColorPrimary);
    margin: 0;
  }

  :global(.Input) {
    .input-area {
      padding: vars.$padding (vars.$padding * 1.5); // 8px 12px
      border: 1px solid var(--borderColor);
      border-radius: calc(vars.$unit / 2); // 4px
      background-color: var(--inputControlBackground);

      .input {
        color: var(--textColorPrimary);
        font-size: 14px;
        font-family: var(--font-main);
        background: transparent;
        border: none;
        outline: none;

        &::placeholder {
          color: var(--textColorSecondary);
          opacity: 0.7;
        }
      }

      &:focus-within {
        border-color: var(--colorInfo);
        box-shadow: 0 0 0 2px
          var(--colorInfoTransparent, rgba(0, 167, 160, 0.1));
      }
    }
  }
}

.dialogButtons {
  background: var(--contentColor);
  padding: vars.$padding * 2.5; // 20px
  display: flex;
  justify-content: flex-end;
  gap: vars.$margin; // 8px
  border-bottom-left-radius: calc(vars.$unit / 2); // 4px
  border-bottom-right-radius: calc(vars.$unit / 2); // 4px
  border-top: 1px solid var(--borderColor);

  :global(.Button) {
    &.cancel {
      background-color: var(--buttonSecondaryBackground, var(--contentColor));
      color: var(--textColorPrimary);
      border: 1px solid var(--borderColor);

      &:hover {
        background-color: var(
          --buttonSecondaryBackgroundHover,
          var(--secondaryBackground)
        );
      }
    }

    &.ok {
      background-color: var(--buttonPrimaryBackground, var(--colorInfo));
      color: var(--buttonPrimaryColor, white);
      border: 1px solid var(--buttonPrimaryBackground, var(--colorInfo));

      &:hover {
        background-color: var(
          --buttonPrimaryBackgroundHover,
          var(--colorInfoHover)
        );
      }
    }
  }
}
